{"remainingRequest":"C:\\Users\\HM\\Desktop\\coin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HM\\Desktop\\coin\\src\\api\\user.js","dependencies":[{"path":"C:\\Users\\HM\\Desktop\\coin\\src\\api\\user.js","mtime":1567005614343},{"path":"C:\\Users\\HM\\Desktop\\coin\\.babelrc","mtime":1556246239000},{"path":"C:\\Users\\HM\\Desktop\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HM\\Desktop\\coin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from '@/libs/api.request';\nexport var login = function login(_ref) {\n  var userName = _ref.userName,\n      password = _ref.password;\n  var data = {\n    Username: userName,\n    Password: password\n  };\n  return axios.request({\n    url: 'login',\n    data: data,\n    method: 'post'\n  });\n};\nexport var getUserInfo = function getUserInfo(token) {\n  var data = {\n    Token: token\n  };\n  return axios.request({\n    url: 'GetUserInfo',\n    data: data,\n    method: 'post'\n  });\n};\nexport var getUnreadCount = function getUnreadCount() {\n  return axios.request({\n    url: 'message/count',\n    method: 'get'\n  });\n};\nexport var getMessage = function getMessage() {\n  return axios.request({\n    url: 'message/init',\n    method: 'get'\n  });\n};\nexport var getContentByMsgId = function getContentByMsgId(msg_id) {\n  return axios.request({\n    url: 'message/content',\n    method: 'get',\n    params: {\n      msg_id: msg_id\n    }\n  });\n};\nexport var hasRead = function hasRead(msg_id) {\n  return axios.request({\n    url: 'message/has_read',\n    method: 'post',\n    data: {\n      msg_id: msg_id\n    }\n  });\n};\nexport var removeReaded = function removeReaded(msg_id) {\n  return axios.request({\n    url: 'message/remove_readed',\n    method: 'post',\n    data: {\n      msg_id: msg_id\n    }\n  });\n};\nexport var restoreTrash = function restoreTrash(msg_id) {\n  return axios.request({\n    url: 'message/restore',\n    method: 'post',\n    data: {\n      msg_id: msg_id\n    }\n  });\n};",{"version":3,"sources":["C:\\Users\\HM\\Desktop\\coin\\src\\api\\user.js"],"names":["axios","login","userName","password","data","Username","Password","request","url","method","getUserInfo","token","Token","getUnreadCount","getMessage","getContentByMsgId","msg_id","params","hasRead","removeReaded","restoreTrash"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/C,MAAMC,IAAI,GAAG;AACXC,IAAAA,QAAQ,EAACH,QADE;AAEXI,IAAAA,QAAQ,EAACH;AAFE,GAAb;AAIA,SAAOH,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,OADc;AAEnBJ,IAAAA,IAAI,EAAJA,IAFmB;AAGnBK,IAAAA,MAAM,EAAE;AAHW,GAAd,CAAP;AAKD,CAVM;AAYP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AACpC,MAAMP,IAAI,GAAG;AACXQ,IAAAA,KAAK,EAAGD;AADG,GAAb;AAGA,SAAOX,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,aADc;AAEnBJ,IAAAA,IAAI,EAAJA,IAFmB;AAGnBK,IAAAA,MAAM,EAAE;AAHW,GAAd,CAAP;AAKD,CATM;AAWP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAOb,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,eADc;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAAd,CAAP;AAID,CALM;AAOP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAOd,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,cADc;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAAd,CAAP;AAID,CALM;AAOP,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AACzC,SAAOhB,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,iBADc;AAEnBC,IAAAA,MAAM,EAAE,KAFW;AAGnBQ,IAAAA,MAAM,EAAE;AACND,MAAAA,MAAM,EAANA;AADM;AAHW,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAAF,MAAM,EAAI;AAC/B,SAAOhB,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,kBADc;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBL,IAAAA,IAAI,EAAE;AACJY,MAAAA,MAAM,EAANA;AADI;AAHa,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAH,MAAM,EAAI;AACpC,SAAOhB,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,uBADc;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBL,IAAAA,IAAI,EAAE;AACJY,MAAAA,MAAM,EAANA;AADI;AAHa,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAAAJ,MAAM,EAAI;AACpC,SAAOhB,KAAK,CAACO,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,iBADc;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBL,IAAAA,IAAI,EAAE;AACJY,MAAAA,MAAM,EAANA;AADI;AAHa,GAAd,CAAP;AAOD,CARM","sourcesContent":["import axios from '@/libs/api.request'\n\nexport const login = ({ userName, password }) => {\n  const data = {\n    Username:userName,\n    Password:password\n  }\n  return axios.request({\n    url: 'login',\n    data,\n    method: 'post'\n  })\n}\n\nexport const getUserInfo = (token) => {\n  const data = {\n    Token : token\n  }\n  return axios.request({\n    url: 'GetUserInfo',\n    data,\n    method: 'post'\n  })\n}\n\nexport const getUnreadCount = () => {\n  return axios.request({\n    url: 'message/count',\n    method: 'get'\n  })\n}\n\nexport const getMessage = () => {\n  return axios.request({\n    url: 'message/init',\n    method: 'get'\n  })\n}\n\nexport const getContentByMsgId = msg_id => {\n  return axios.request({\n    url: 'message/content',\n    method: 'get',\n    params: {\n      msg_id\n    }\n  })\n}\n\nexport const hasRead = msg_id => {\n  return axios.request({\n    url: 'message/has_read',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  })\n}\n\nexport const removeReaded = msg_id => {\n  return axios.request({\n    url: 'message/remove_readed',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  })\n}\n\nexport const restoreTrash = msg_id => {\n  return axios.request({\n    url: 'message/restore',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  })\n}\n"]}]}